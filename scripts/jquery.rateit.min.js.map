{"version":3,"sources":["jquery.rateit.js"],"names":["$","touchHandler","event","first","originalEvent","changedTouches","type","simulatedEvent","document","createEvent","initMouseEvent","window","screenX","screenY","clientX","clientY","target","dispatchEvent","preventDefault","rateit","aria","resetLabel","ratingLabel","fn","p1","p2","capitaliseFirstLetter","string","charAt","toUpperCase","substr","index","options","mode","this","length","tp1","extend","defaults","undefined","data","each","itemdata","key","value","ariakey","range","item","find","attr","apply","arguments","setup","prop","fld","nodeName","getAttribute","val","trigger","min","max","step","hasClass","addClass","ltr","css","unbind","Math","icon","isNaN","readonly","resetable","backingfld","starwidth","starheight","ispreset","minvalue","hide","parseInt","Number","selectedOption","element","html","append","replace","removeClass","JSON","parse","stringify","isfont","height","stars","txt","i","text","width","presetclass","score","resetbtn","bind","e","blur","Event","isDefaultPrevented","calcRawScore","offsetx","pageX","offset","left","ceil","setSelection","show","mousemove","w","h","setHover","mouseleave","mouseup","keyup","which","jQuery"],"mappings":"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","file":"jquery.rateit.min.js","sourcesContent":["ï»¿/*! RateIt | v1.1.2 / 03/28/2019\n    https://github.com/gjunge/rateit.js | Twitter: @gjunge\n*/\n(function ($) {\n    $.rateit = {\n        aria: {\n            resetLabel: 'reset rating',\n            ratingLabel: 'rating'\n        }\n    };\n\n    $.fn.rateit = function (p1, p2) {\n        //quick way out.\n        var index = 1;\n        var options = {}; var mode = 'init';\n        var capitaliseFirstLetter = function (string) {\n            return string.charAt(0).toUpperCase() + string.substr(1);\n        };\n\n        if (this.length === 0) { return this; }\n\n\n        var tp1 = $.type(p1);\n        if (tp1 == 'object' || p1 === undefined || p1 === null) {\n            options = $.extend({}, $.fn.rateit.defaults, p1); //wants to init new rateit plugin(s).\n        }\n        else if (tp1 == 'string' && p1 !== 'reset' && p2 === undefined) {\n            return this.data('rateit' + capitaliseFirstLetter(p1)); //wants to get a value.\n        }\n        else if (tp1 == 'string') {\n            mode = 'setvalue';\n        }\n\n        return this.each(function () {\n            var item = $(this);\n\n\n            //shorten all the item.data('rateit-XXX'), will save space in closure compiler, will be like item.data('XXX') will become x('XXX')\n            var itemdata = function (key, value) {\n\n                if (value != null) {\n                    //update aria values\n                    var ariakey = 'aria-value' + ((key == 'value') ? 'now' : key);\n                    var range = item.find('.rateit-range');\n                    if (range.attr(ariakey) != undefined) {\n                        range.attr(ariakey, value);\n                    }\n\n                }\n\n                arguments[0] = 'rateit' + capitaliseFirstLetter(key);\n                return item.data.apply(item, arguments); ////Fix for WI: 523\n            };\n\n            //handle programmatic reset\n            if (p1 == 'reset') {\n                var setup = itemdata('init'); //get initial value\n                for (var prop in setup) {\n                    item.data(prop, setup[prop]);\n                }\n\n                if (itemdata('backingfld')) { //reset also backingfield\n                    var fld = $(itemdata('backingfld'));\n                    // If backing field is a select box with valuesrc option set to \"index\", reset its selectedIndex property; otherwise, reset its value.\n                    if (fld[0].nodeName == 'SELECT' && fld[0].getAttribute('data-rateit-valuesrc') === 'index') {\n                        fld.prop('selectedIndex', itemdata('value'));\n                    }\n                    else {\n                        fld.val(itemdata('value'));\n                    }\n                    fld.trigger('change');\n                    if (fld[0].min) { fld[0].min = itemdata('min'); }\n                    if (fld[0].max) { fld[0].max = itemdata('max'); }\n                    if (fld[0].step) { fld[0].step = itemdata('step'); }\n                }\n                item.trigger('reset');\n            }\n\n            //add the rate it class.\n            if (!item.hasClass('rateit')) { item.addClass('rateit'); }\n\n            var ltr = item.css('direction') != 'rtl';\n\n            // set value mode\n            if (mode == 'setvalue') {\n                if (!itemdata('init')) { throw 'Can\\'t set value before init'; }\n\n\n                //if readonly now and it wasn't readonly, remove the eventhandlers.\n                if (p1 == 'readonly' && p2 == true && !itemdata('readonly')) {\n                    item.find('.rateit-range').unbind();\n                    itemdata('wired', false);\n                }\n                //when we receive a null value, reset the score to its min value.\n                if (p1 == 'value') {\n                    p2 = (p2 == null) ? itemdata('min') : Math.max(itemdata('min'), Math.min(itemdata('max'), p2));\n                }\n                if (itemdata('backingfld')) {\n                    //if we have a backing field, check which fields we should update.\n                    //In case of input[type=range], although we did read its attributes even in browsers that don't support it (using fld.attr())\n                    //we only update it in browser that support it (&& fld[0].min only works in supporting browsers), not only does it save us from checking if it is range input type, it also is unnecessary.\n                    var fld = $(itemdata('backingfld'));\n                    // If backing field is a select box with valuesrc option set to \"index\", update its selectedIndex property; otherwise, update its value.\n                    if (fld[0].nodeName == 'SELECT' && fld[0].getAttribute('data-rateit-valuesrc') === 'index') {\n                        if (p1 == 'value') { fld.prop('selectedIndex', p2); }\n                    }\n                    else {\n                        if (p1 == 'value') { fld.val(p2); }\n                    }\n                    if (p1 == 'min' && fld[0].min) { fld[0].min = p2; }\n                    if (p1 == 'max' && fld[0].max) { fld[0].max = p2;}\n                    if (p1 == 'step' && fld[0].step) { fld[0].step = p2; }\n                }\n\n                itemdata(p1, p2);\n            }\n\n\n            //init rateit plugin\n            if (!itemdata('init')) {\n\n                //get our values, either from the data-* html5 attribute or from the options.\n                itemdata('mode', itemdata('mode') || options.mode)\n                itemdata('icon', itemdata('icon') || options.icon)\n                itemdata('min', isNaN(itemdata('min')) ? options.min : itemdata('min'));\n                itemdata('max', isNaN(itemdata('max')) ? options.max : itemdata('max'));\n                itemdata('step', itemdata('step') || options.step);\n                itemdata('readonly', itemdata('readonly') !== undefined ? itemdata('readonly') : options.readonly);\n                itemdata('resetable', itemdata('resetable') !== undefined ? itemdata('resetable') : options.resetable);\n                itemdata('backingfld', itemdata('backingfld') || options.backingfld);\n                itemdata('starwidth', itemdata('starwidth') || options.starwidth);\n                itemdata('starheight', itemdata('starheight') || options.starheight);\n                itemdata('value', Math.max(itemdata('min'), Math.min(itemdata('max'), (!isNaN(itemdata('value')) ? itemdata('value') : (!isNaN(options.value) ? options.value : options.min)))));\n                itemdata('ispreset', itemdata('ispreset') !== undefined ? itemdata('ispreset') : options.ispreset);\n                itemdata('minvalue', isNaN(itemdata('minvalue')) ? options.minvalue : itemdata('minvalue'));\n                //are we LTR or RTL?\n\n                if (itemdata('backingfld')) {\n                    //if we have a backing field, hide it, override defaults if range or select.\n                    var fld = $(itemdata('backingfld')).hide();\n\n                    if (fld.attr('disabled') || fld.attr('readonly')) {\n                        itemdata('readonly', true); //http://rateit.codeplex.com/discussions/362055 , if a backing field is disabled or readonly at instantiation, make rateit readonly.\n                    }\n\n                    if (fld[0].nodeName == 'INPUT') {\n                        if (fld[0].type == 'range' || fld[0].type == 'text') { //in browsers not support the range type, it defaults to text\n\n                            itemdata('min', parseInt(fld.attr('min')) || itemdata('min')); //if we would have done fld[0].min it wouldn't have worked in browsers not supporting the range type.\n                            itemdata('max', parseInt(fld.attr('max')) || itemdata('max'));\n                            itemdata('step', parseInt(fld.attr('step')) || itemdata('step'));\n                        }\n                    }\n                    if (fld[0].nodeName == 'SELECT' && fld[0].options.length > 1) {\n                        // If backing field is a select box with valuesrc option set to \"index\", use the indexes of its options; otherwise, use the values.\n                        if (fld[0].getAttribute('data-rateit-valuesrc') === 'index') {\n                            itemdata('min', (!isNaN(itemdata('min')) ? itemdata('min') : Number(fld[0].options[0].index)));\n                            itemdata('max', Number(fld[0].options[fld[0].length - 1].index));\n                            itemdata('step', Number(fld[0].options[1].index) - Number(fld[0].options[0].index));\n                        }\n                        else {\n                            itemdata('min', (!isNaN(itemdata('min')) ? itemdata('min') : Number(fld[0].options[0].value)));\n                            itemdata('max', Number(fld[0].options[fld[0].length - 1].value));\n                            itemdata('step', Number(fld[0].options[1].value) - Number(fld[0].options[0].value));\n                        }\n                        //see if we have a option that as explicity been selected\n                        var selectedOption = fld.find('option[selected]');\n                        if (selectedOption.length == 1) {\n                            // If backing field is a select box with valuesrc option set to \"index\", use the index of selected option; otherwise, use the value.\n                            if (fld[0].getAttribute('data-rateit-valuesrc') === 'index') {\n                                itemdata('value', selectedOption[0].index);\n                            }\n                            else {\n                                itemdata('value', selectedOption.val());\n                            }\n                        }\n                    }\n                    else {\n                        //if it is not a select box, we can get's it's value using the val function.\n                        //If it is a selectbox, we always get a value (the first one of the list), even if it was not explicity set.\n                        itemdata('value', fld.val());\n                    }\n\n\n                }\n\n\n\n                //Create the necessary tags. For ARIA purposes we need to give the items an ID. So we use an internal index to create unique ids\n                var element = item[0].nodeName == 'DIV' ? 'div' : 'span';\n                index++;\n\n                // tabindex=\"0\" gets only added in readonly mode. When keyboard tabbing, no focus is needed in readonly mode.\n                var html = '<button id=\"rateit-reset-{{index}}\" type=\"button\" data-role=\"none\" class=\"rateit-reset\" aria-label=\"' + $.rateit.aria.resetLabel + '\" aria-controls=\"rateit-range-{{index}}\"><span></span></button><{{element}} id=\"rateit-range-{{index}}\" class=\"rateit-range\"' + (itemdata('readonly') == true ? '' : ' tabindex=\"0\"') + ' role=\"slider\" aria-label=\"' + $.rateit.aria.ratingLabel + '\" aria-owns=\"rateit-reset-{{index}}\" aria-valuemin=\"' + itemdata('min') + '\" aria-valuemax=\"' + itemdata('max') + '\" aria-valuenow=\"' + itemdata('value') + '\"><{{element}} class=\"rateit-empty\"></{{element}}><{{element}} class=\"rateit-selected\"></{{element}}><{{element}} class=\"rateit-hover\"></{{element}}></{{element}}>';\n                item.append(html.replace(/{{index}}/gi, index).replace(/{{element}}/gi, element));\n\n                //if we are in RTL mode, we have to change the float of the \"reset button\"\n                if (!ltr) {\n                    item.find('.rateit-reset').css('float', 'right');\n                    item.find('.rateit-selected').addClass('rateit-selected-rtl');\n                    item.find('.rateit-hover').addClass('rateit-hover-rtl');\n                }\n\n                if (itemdata('mode') == 'font') {\n                    item.addClass('rateit-font').removeClass('rateit-bg');\n                }\n                else {\n                    item.addClass('rateit-bg').removeClass('rateit-font');\n                }\n\n                itemdata('init', JSON.parse(JSON.stringify(item.data()))); //cheap way to create a clone\n            }\n\n            var isfont = itemdata('mode') == 'font';\n\n\n\n\n            //resize the height of all elements,\n            if (!isfont) {\n                item.find('.rateit-selected, .rateit-hover').height(itemdata('starheight'));\n            }\n\n\n            var range = item.find('.rateit-range');\n            if (isfont) {\n                //fill the ranges with the icons\n                var icon = itemdata('icon');\n                var stars = itemdata('max') - itemdata('min');\n\n                var txt = '';\n                for(var i = 0; i< stars; i++){\n                    txt += icon;\n                }\n\n                range.find('> *').text(txt);\n\n\n                itemdata('starwidth', range.width() / (itemdata('max') - itemdata('min')))\n            }\n            else {\n                //set the range element to fit all the stars.\n                range.width(itemdata('starwidth') * (itemdata('max') - itemdata('min'))).height(itemdata('starheight'));\n            }\n\n\n            //add/remove the preset class\n            var presetclass = 'rateit-preset' + ((ltr) ? '' : '-rtl');\n            if (itemdata('ispreset')) {\n                item.find('.rateit-selected').addClass(presetclass);\n            }\n            else {\n                item.find('.rateit-selected').removeClass(presetclass);\n            }\n\n            //set the value if we have it.\n            if (itemdata('value') != null) {\n                var score = (itemdata('value') - itemdata('min')) * itemdata('starwidth');\n                item.find('.rateit-selected').width(score);\n            }\n\n            //setup the reset button\n            var resetbtn = item.find('.rateit-reset');\n            if (resetbtn.data('wired') !== true) {\n                resetbtn.bind('click', function (e) {\n                    e.preventDefault();\n\n                    resetbtn.blur();\n\n                    var event = $.Event('beforereset');\n                    item.trigger(event);\n                    if (event.isDefaultPrevented()) {\n                        return false;\n                    }\n\n                    item.rateit('value', itemdata('minvalue') ? itemdata('minvalue') : null);\n                    item.trigger('reset');\n                }).data('wired', true);\n\n            }\n\n            //this function calculates the score based on the current position of the mouse.\n            var calcRawScore = function (element, event) {\n                var pageX = (event.changedTouches) ? event.changedTouches[0].pageX : event.pageX;\n\n                var offsetx = pageX - $(element).offset().left;\n                if (!ltr) { offsetx = range.width() - offsetx };\n                if (offsetx > range.width()) { offsetx = range.width(); }\n                if (offsetx < 0) { offsetx = 0; }\n\n                var score = Math.ceil(offsetx / itemdata('starwidth') * (1 / itemdata('step')));\n                if (itemdata('minvalue')) {\n                    score = Math.max(itemdata('minvalue') / itemdata('step'), score);\n                }\n                return score;\n            };\n\n            //sets the hover element based on the score.\n            var setHover = function (score) {\n                var w = score * itemdata('starwidth') * itemdata('step');\n                var h = range.find('.rateit-hover');\n                if (h.data('width') != w) {\n                    range.find('.rateit-selected').hide();\n                    h.width(w).show().data('width', w);\n                    var data = [(score * itemdata('step')) + itemdata('min')];\n                    item.trigger('hover', data).trigger('over', data);\n                }\n            };\n\n            var setSelection = function (value) {\n                var event = $.Event('beforerated');\n                item.trigger(event, [value]);\n                if (event.isDefaultPrevented()) {\n                    return false;\n                }\n\n                itemdata('value', value);\n                if (itemdata('backingfld')) {\n                    // If backing field is a select box with valuesrc option set to \"index\", update its selectedIndex property; otherwise, update its value.\n                    if (fld[0].nodeName == 'SELECT' && fld[0].getAttribute('data-rateit-valuesrc') === 'index') {\n                        $(itemdata('backingfld')).prop('selectedIndex', value).trigger('change');\n                    }\n                    else {\n                        $(itemdata('backingfld')).val(value).trigger('change');\n                    }\n                }\n                if (itemdata('ispreset')) { //if it was a preset value, unset that.\n                    range.find('.rateit-selected').removeClass(presetclass);\n                    itemdata('ispreset', false);\n                }\n                range.find('.rateit-hover').hide();\n                range.find('.rateit-selected').width(value * itemdata('starwidth') - (itemdata('min') * itemdata('starwidth'))).show();\n                item.trigger('hover', [null]).trigger('over', [null]).trigger('rated', [value]);\n                return true;\n            };\n\n            if (!itemdata('readonly')) {\n                //if we are not read only, add all the events\n\n                //if we have a reset button, set the event handler.\n                if (!itemdata('resetable')) {\n                    resetbtn.hide();\n                }\n\n                //when the mouse goes over the range element, we set the \"hover\" stars.\n                if (!itemdata('wired')) {\n                    range.bind('touchmove touchend', touchHandler); //bind touch events\n                    range.mousemove(function (e) {\n                        var score = calcRawScore(this, e);\n                        setHover(score);\n                    });\n                    //when the mouse leaves the range, we have to hide the hover stars, and show the current value.\n                    range.mouseleave(function (e) {\n                        range.find('.rateit-hover').hide().width(0).data('width', '');\n                        item.trigger('hover', [null]).trigger('over', [null]);\n                        range.find('.rateit-selected').show();\n                    });\n                    //when we click on the range, we have to set the value, hide the hover.\n                    range.mouseup(function (e) {\n                        var score = calcRawScore(this, e);\n                        var value = (score * itemdata('step')) + itemdata('min');\n                        setSelection(value);\n                        range.blur();\n                    });\n\n                    //support key nav\n                    range.keyup(function (e) {\n                        if (e.which == 38 || e.which == (ltr ? 39 : 37)) {\n                            setSelection(Math.min(itemdata('value') + itemdata('step'), itemdata('max')));\n                        }\n                        if (e.which == 40 || e.which == (ltr ? 37 : 39)) {\n                            setSelection(Math.max(itemdata('value') - itemdata('step'), itemdata('min')));\n                        }\n                    });\n\n                    itemdata('wired', true);\n                }\n                if (itemdata('resetable')) {\n                    resetbtn.show();\n                }\n            }\n            else {\n                resetbtn.hide();\n            }\n\n            range.attr('aria-readonly', itemdata('readonly'));\n        });\n    };\n\n    //touch converter http://ross.posterous.com/2008/08/19/iphone-touch-events-in-javascript/\n    function touchHandler(event) {\n\n        var touches = event.originalEvent.changedTouches,\n                first = touches[0],\n                type = \"\";\n        switch (event.type) {\n            case \"touchmove\": type = \"mousemove\"; break;\n            case \"touchend\": type = \"mouseup\"; break;\n            default: return;\n        }\n\n        var simulatedEvent = document.createEvent(\"MouseEvent\");\n        simulatedEvent.initMouseEvent(type, true, true, window, 1,\n                              first.screenX, first.screenY,\n                              first.clientX, first.clientY, false,\n                              false, false, false, 0/*left*/, null);\n\n        first.target.dispatchEvent(simulatedEvent);\n        event.preventDefault();\n    };\n\n    //some default values.\n    $.fn.rateit.defaults = { min: 0, max: 5, step: 0.5, mode: 'bg', icon: 'â', starwidth: 16, starheight: 16, readonly: false, resetable: true, ispreset: false, minvalue: false };\n\n    //invoke it on all .rateit elements. This could be removed if not wanted.\n    $(function () { $('div.rateit, span.rateit').rateit(); });\n\n})(jQuery);\n"]}